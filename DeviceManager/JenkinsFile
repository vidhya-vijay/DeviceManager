pipeline{

    agent none

    stages{
        stage('build'){
            agent{
              docker{
               image 'maven:3.6.1-jdk-8-slim'
               args '-v $HOME/.m2:/root/.m2'
              }
            }

            steps{
                echo 'building Device Manager app'
                dir('DeviceManager'){
                  sh 'mvn compile'
                }
            }
        }
        stage('test'){
            agent{
              docker{
               image 'maven:3.6.1-jdk-8-slim'
               args '-v $HOME/.m2:/root/.m2'
              }
            }
            steps{
                echo 'running unit tests on worker app'
                dir('DeviceManager'){
                  sh 'mvn clean test'
                }
            }
        }
        stage('package'){
            agent{
              docker{
               image 'maven:3.6.1-jdk-8-slim'
               args '-v $HOME/.m2:/root/.m2'
              }
            }
            steps{
                echo 'packaging worker app into a jarfile'
                dir('DeviceManager'){
                  sh 'mvn package -DskipTests'
                  archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
                }
            }
        }
        stage('docker-package'){
            agent any
            steps{
              echo 'Packaging DeviceManager app with docker'
              script{
                docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                    def workerImage = docker.build("vidhyag/devicemanager:v${env.BUILD_ID}", "./DeviceManager")
                    workerImage.push()
                    workerImage.push("latest")
                }
              }
            }
        }
    }

    post{
        always{
            echo 'the job is complete'
        }

    }

}
